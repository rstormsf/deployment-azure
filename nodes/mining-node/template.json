{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "FullName": {
      "type": "string",
      "metadata": {
        "description": "Node full name (publicly visible)"
      }
    },
    "AdminEmail": {
      "type": "string",
      "metadata": {
        "description": "Node admin email (publicly visible)"
      }
    },
    "AdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine"
      }
    },
    "SSHPublicKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "SSH public key for the Virtual Machine"
      }
    },
    "NetstatsServer": {
      "type": "string",
      "metadata": {
        "description": "NetStats server IP"
      }
    },
    "NetstatsSecret": {
      "type": "secureString",
      "metadata": {
        "description": "NetStats net code"
      }
    },
    "MiningKeyAddress": {
      "type": "string",
      "metadata": {
        "description": "Miner blockchain account address (0x...)"
      }
    },
    "MiningKeyPassword": {
      "type": "secureString",
      "metadata": {
        "description": "Password for the mining key"
      }
    },
    "MiningJSONKeyFile": {
      "type": "secureString",
      "metadata": {
        "description": "Content of the file with mining key (json string)"
      }
    }
  },
  "variables": {
    "TEMPLATES_BRANCH": "roman_test",
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'salinuxvm')]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "nicName": "myVMNic",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "myPublicIP",
    "publicIPAddressType": "Static",
    "vmName": "MyUbuntuVM",
    "vmSize": "Standard_A1",
    "virtualNetworkName": "MyVNET",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "ubuntuOSVersion": "16.04.0-LTS",
    "adminUsername": "[trim(toLower(parameters('AdminUsername')))]",
    "sshPublicKey": "[trim(parameters('SSHPublicKey'))]",
    "nodeFullName": "[trim(parameters('FullName'))]",
    "nodeAdminEmail": "[trim(parameters('AdminEmail'))]",
    "miningAddress": "[trim(parameters('MiningKeyAddress'))]",
    "miningKeyfile": "[base64(trim(string(parameters('MiningJSONKeyFile'))))]",
    "miningKeypass": "[trim(parameters('MiningKeyPassword'))]",
    "netstatsServer": "[trim(parameters('NetstatsServer'))]",
    "netstatsSecret": "[trim(parameters('NetstatsSecret'))]",
    "dnsLabelPrefix": "[toLower(concat('oracles-', uniqueString(resourceGroup().id, variables('miningAddress'))))]",
    "networkSecurityGroupName": "OraclesTest-NSG-1"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[variables('sshPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": "128",
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
          }
        }
      },
      "resources": [
        {
          "apiVersion": "2015-06-15",
          "type": "extensions",
          "name": "config-app",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
          ],
          "tags": {
            "displayName": "config-app"
          },
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
                "fileUris": [
                    "[concat('https://raw.githubusercontent.com/oraclesorg/deployment-azure/', variables('TEMPLATES_BRANCH'), '/nodes/mining-node/install.sh')]"
                ]
            },
            "protectedSettings": {
                "commandToExecute": "[concat('cp install.sh /home/', variables('adminUsername'), '/; cd /home/', variables('adminUsername'), '; chown ', variables('adminUsername'), ':', variables('adminUsername'), ' install.sh; chmod +x install.sh; TEMPLATES_BRANCH=\"', variables('TEMPLATES_BRANCH'), '\" ADMIN_USERNAME=\"', variables('adminUsername'), '\" NETSTATS_SERVER=\"', variables('netstatsServer'), '\" NETSTATS_SECRET=\"', variables('netstatsSecret'), '\" MINING_KEYFILE=\"', variables('miningKeyfile'), '\" MINING_ADDRESS=\"', variables('miningAddress'), '\" MINING_KEYPASS=\"', variables('miningKeypass'), '\" NODE_FULLNAME=\"', variables('nodeFullName'), '\" NODE_ADMIN_EMAIL=\"', variables('nodeAdminEmail'), '\" sudo -u ', variables('adminUsername'), ' -E -H ./install.sh')]"
            }
          }
        }
      ]
    },
    {
      "name": "[variables('networkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "comments": "Network Security Group (NSG) for your Primary NIC",
      "properties": {
          "securityRules": [
              {
                  "name": "allow-ssh",
                  "properties": {
                      "priority": 1000,
                      "direction": "Inbound",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "protocol": "Tcp",
                      "access": "Allow",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "22"
                  }
              },
              {
                  "name": "allow-rpc",
                  "properties": {
                      "priority": 1100,
                      "direction": "Inbound",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "protocol": "Tcp",
                      "access": "Allow",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "8545"
                  }
              },
              {
                  "name": "allow-discovery",
                  "properties": {
                      "priority": 1200,
                      "direction": "Inbound",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "protocol": "*",
                      "access": "Allow",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "30303"
                  }
              },
              {
                  "name": "disallow-other",
                  "properties": {
                      "priority": 2000,
                      "direction": "Inbound",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "protocol": "*",
                      "access": "Deny",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "*"
                  }
              }
          ]
      }
    }
  ],
  "outputs": {
    "hostname": {
      "type": "string",
      "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
    },
    "sshCommand": {
      "type": "string",
      "value": "[concat('ssh ', variables('adminUsername'), '@', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
    },
    "miningAddress": {
      "type": "string",
      "value": "[variables('miningAddress')]"
    }
  }
}
